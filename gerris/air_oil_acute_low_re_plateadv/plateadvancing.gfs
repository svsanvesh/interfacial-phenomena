#re= 7.26;
# This code is writted with two vertical boxes as the domain with interface in the middle. The centre(0,0) is at the centre of the top box. 
# Edited by : Anvesh 
# Status : working 
#
#angle = acute angle in water
#2D couette flow
# SI systems of units used for non-dimensionalising the results.
#simulation time is 50 seconds
#length of the domain 0.057m i.e 2*10*l_c

2 1 GfsSimulation GfsBox GfsGEdge { } {
    GfsGlobal {  
	#define rhoL 1  //density 
        #define rhoG 1000
        #define muL 0.0183e-3
	#define muG 0.89e-3
	#define g -9.81  // gravitational acceleration
        #define sigmaL1 0.072

        #define Uplate 2.5e-3   // in m/s
        #define theta 120
        #define Lc sqrt(sigmaL1/((rhoL-rhoG)*g)   // capillary length
        #define Ldomain 10*Lc   // Domain size perpendicular to the moving plate

        // refinement parameters
        static int ref_far_interface = 5;
        static int ref_near_interface = 7;
        static int ref_domain = 5;
	}
   

        # Define filtered B field
	VariableTracerVOFHeight {} B
	GfsVariableFiltered B1 B 1
	#GfsAdaptGradient { istep = 1 } { minlevel = 4 maxlevel = 6 cmax=1e-2 } B1
        
	# Define grid refinement
	Refine ref_domain
        #GfsAdaptGradient { istep = 1 }{cmax = 1e-2 maxlevel = 9  minlevel =4 } B1
	
	GfsAdaptGradient { istep = 1 }{cmax = 1e-2 maxlevel = (x < 0.010125 ? ( x < 0.00675 ? (x < 0.0 ? (x  < -0.00675  ? (x < -0.010125 ?  6 :6 ):6) : 7): 8) : 9)  minlevel =5 } B1
        
	
	# Define physical parameters
	GfsVariableCurvature KB B KBmax
        GfsSourceTension B sigmaL1 KB
	Source {} V g
	GfsPhysicalParams { L = 0.027 alpha = 1./(B1*rhoL+(1-B1)*rhoG) }  #domain size is here 

        SourceViscosity {} ((muL*B+(1-B)*muG))
	 

        # Running the simulation here
	GfsTime { start =0 end = 50 dtmax= 0.001 }  
	GfsInitFraction {} B (y + 0.0135 )   # initial interface position

        # Saving the output
        OutputTime { istep = 1 } stderr
	OutputSimulation { start=0 step=0.1} alpha-%g.gfs {variables = B,U,V,P}
	OutputPPM {step=.001} { ppm2mpeg > t.mpg } {	min = 0 max = 1 v = B	}

}
#box 1      
	GfsBox {
	top = Boundary {	
	BcDirichlet U 0
        BcDirichlet V 0
         }
        left = Boundary{
        BcDirichlet U 0
        BcDirichlet V 0
        BcAngle B 90
        }

        right = Boundary{
        BcDirichlet U 0
        BcDirichlet V Uplate
        BcAngle B theta
	}
}
#box2
GfsBox {
        left = Boundary {
        BcDirichlet U 0
        BcDirichlet V 0
	BcAngle B 90
         }
        right = Boundary{
        BcDirichlet U 0
        BcDirichlet V Uplate
	BcAngle B theta
        }
        bottom = Boundary{
        BcDirichlet U 0
        BcDirichlet V 0
        }
}

1 2 bottom
